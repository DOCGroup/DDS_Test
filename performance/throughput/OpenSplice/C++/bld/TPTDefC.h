// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be/be_codegen.cpp:171

#ifndef _TAO_IDL_TPTDEFC_H_
#define _TAO_IDL_TPTDEFC_H_

#include "tao/ORB.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/CDR.h"
#include "tao/Environment.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO 
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:48

namespace TP_Test
{
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct QuitMsg;
  
  typedef
    TAO_Fixed_Var_T<
        QuitMsg
      >
    QuitMsg_var;
  
  typedef
    QuitMsg &
    QuitMsg_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  QuitMsg
  {
    typedef QuitMsg_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::Boolean quit;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_QuitMsg;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES4SEQUENCE_CH_)
#define _TP_TEST_BYTES4SEQUENCE_CH_
  
  class Bytes4Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes4Sequence,
        CORBA::Octet
      >
    Bytes4Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes4Sequence,
        Bytes4Sequence_var,
        CORBA::Octet
      >
    Bytes4Sequence_out;
  
  class  Bytes4Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            4
          >
  {
  public:
    Bytes4Sequence (void);
    Bytes4Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes4Sequence (const Bytes4Sequence &);
    ~Bytes4Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes4Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes4Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES8SEQUENCE_CH_)
#define _TP_TEST_BYTES8SEQUENCE_CH_
  
  class Bytes8Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes8Sequence,
        CORBA::Octet
      >
    Bytes8Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes8Sequence,
        Bytes8Sequence_var,
        CORBA::Octet
      >
    Bytes8Sequence_out;
  
  class  Bytes8Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            8
          >
  {
  public:
    Bytes8Sequence (void);
    Bytes8Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes8Sequence (const Bytes8Sequence &);
    ~Bytes8Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes8Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes8Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES16SEQUENCE_CH_)
#define _TP_TEST_BYTES16SEQUENCE_CH_
  
  class Bytes16Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes16Sequence,
        CORBA::Octet
      >
    Bytes16Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes16Sequence,
        Bytes16Sequence_var,
        CORBA::Octet
      >
    Bytes16Sequence_out;
  
  class  Bytes16Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            16
          >
  {
  public:
    Bytes16Sequence (void);
    Bytes16Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes16Sequence (const Bytes16Sequence &);
    ~Bytes16Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes16Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes16Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES32SEQUENCE_CH_)
#define _TP_TEST_BYTES32SEQUENCE_CH_
  
  class Bytes32Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes32Sequence,
        CORBA::Octet
      >
    Bytes32Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes32Sequence,
        Bytes32Sequence_var,
        CORBA::Octet
      >
    Bytes32Sequence_out;
  
  class  Bytes32Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            32
          >
  {
  public:
    Bytes32Sequence (void);
    Bytes32Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes32Sequence (const Bytes32Sequence &);
    ~Bytes32Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes32Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes32Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES64SEQUENCE_CH_)
#define _TP_TEST_BYTES64SEQUENCE_CH_
  
  class Bytes64Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes64Sequence,
        CORBA::Octet
      >
    Bytes64Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes64Sequence,
        Bytes64Sequence_var,
        CORBA::Octet
      >
    Bytes64Sequence_out;
  
  class  Bytes64Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            64
          >
  {
  public:
    Bytes64Sequence (void);
    Bytes64Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes64Sequence (const Bytes64Sequence &);
    ~Bytes64Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes64Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes64Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES128SEQUENCE_CH_)
#define _TP_TEST_BYTES128SEQUENCE_CH_
  
  class Bytes128Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes128Sequence,
        CORBA::Octet
      >
    Bytes128Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes128Sequence,
        Bytes128Sequence_var,
        CORBA::Octet
      >
    Bytes128Sequence_out;
  
  class  Bytes128Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            128
          >
  {
  public:
    Bytes128Sequence (void);
    Bytes128Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes128Sequence (const Bytes128Sequence &);
    ~Bytes128Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes128Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes128Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES256SEQUENCE_CH_)
#define _TP_TEST_BYTES256SEQUENCE_CH_
  
  class Bytes256Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes256Sequence,
        CORBA::Octet
      >
    Bytes256Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes256Sequence,
        Bytes256Sequence_var,
        CORBA::Octet
      >
    Bytes256Sequence_out;
  
  class  Bytes256Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            256
          >
  {
  public:
    Bytes256Sequence (void);
    Bytes256Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes256Sequence (const Bytes256Sequence &);
    ~Bytes256Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes256Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes256Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES512SEQUENCE_CH_)
#define _TP_TEST_BYTES512SEQUENCE_CH_
  
  class Bytes512Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes512Sequence,
        CORBA::Octet
      >
    Bytes512Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes512Sequence,
        Bytes512Sequence_var,
        CORBA::Octet
      >
    Bytes512Sequence_out;
  
  class  Bytes512Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            512
          >
  {
  public:
    Bytes512Sequence (void);
    Bytes512Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes512Sequence (const Bytes512Sequence &);
    ~Bytes512Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes512Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes512Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES1024SEQUENCE_CH_)
#define _TP_TEST_BYTES1024SEQUENCE_CH_
  
  class Bytes1024Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes1024Sequence,
        CORBA::Octet
      >
    Bytes1024Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes1024Sequence,
        Bytes1024Sequence_var,
        CORBA::Octet
      >
    Bytes1024Sequence_out;
  
  class  Bytes1024Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            1024
          >
  {
  public:
    Bytes1024Sequence (void);
    Bytes1024Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes1024Sequence (const Bytes1024Sequence &);
    ~Bytes1024Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes1024Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes1024Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES2048SEQUENCE_CH_)
#define _TP_TEST_BYTES2048SEQUENCE_CH_
  
  class Bytes2048Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes2048Sequence,
        CORBA::Octet
      >
    Bytes2048Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes2048Sequence,
        Bytes2048Sequence_var,
        CORBA::Octet
      >
    Bytes2048Sequence_out;
  
  class  Bytes2048Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            2048
          >
  {
  public:
    Bytes2048Sequence (void);
    Bytes2048Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes2048Sequence (const Bytes2048Sequence &);
    ~Bytes2048Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes2048Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes2048Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES4096SEQUENCE_CH_)
#define _TP_TEST_BYTES4096SEQUENCE_CH_
  
  class Bytes4096Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes4096Sequence,
        CORBA::Octet
      >
    Bytes4096Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes4096Sequence,
        Bytes4096Sequence_var,
        CORBA::Octet
      >
    Bytes4096Sequence_out;
  
  class  Bytes4096Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            4096
          >
  {
  public:
    Bytes4096Sequence (void);
    Bytes4096Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes4096Sequence (const Bytes4096Sequence &);
    ~Bytes4096Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes4096Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes4096Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES8192SEQUENCE_CH_)
#define _TP_TEST_BYTES8192SEQUENCE_CH_
  
  class Bytes8192Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes8192Sequence,
        CORBA::Octet
      >
    Bytes8192Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes8192Sequence,
        Bytes8192Sequence_var,
        CORBA::Octet
      >
    Bytes8192Sequence_out;
  
  class  Bytes8192Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            8192
          >
  {
  public:
    Bytes8192Sequence (void);
    Bytes8192Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes8192Sequence (const Bytes8192Sequence &);
    ~Bytes8192Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes8192Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes8192Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_BYTES16384SEQUENCE_CH_)
#define _TP_TEST_BYTES16384SEQUENCE_CH_
  
  class Bytes16384Sequence;
  
  typedef
    TAO_FixedSeq_Var_T<
        Bytes16384Sequence,
        CORBA::Octet
      >
    Bytes16384Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Bytes16384Sequence,
        Bytes16384Sequence_var,
        CORBA::Octet
      >
    Bytes16384Sequence_out;
  
  class  Bytes16384Sequence
    : public
        TAO_Bounded_Sequence<
            CORBA::Octet,
            16384
          >
  {
  public:
    Bytes16384Sequence (void);
    Bytes16384Sequence (
        CORBA::ULong length,
        CORBA::Octet* buffer, 
        CORBA::Boolean release = 0
      );
    Bytes16384Sequence (const Bytes16384Sequence &);
    ~Bytes16384Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Bytes16384Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes16384Sequence;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes4;
  
  typedef
    TAO_Var_Var_T<
        Bytes4
      >
    Bytes4_var;
  
  typedef
    TAO_Out_T<
        Bytes4,
        Bytes4_var
      >
    Bytes4_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes4
  {
    typedef Bytes4_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes4Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes4;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes8;
  
  typedef
    TAO_Var_Var_T<
        Bytes8
      >
    Bytes8_var;
  
  typedef
    TAO_Out_T<
        Bytes8,
        Bytes8_var
      >
    Bytes8_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes8
  {
    typedef Bytes8_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes8Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes8;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes16;
  
  typedef
    TAO_Var_Var_T<
        Bytes16
      >
    Bytes16_var;
  
  typedef
    TAO_Out_T<
        Bytes16,
        Bytes16_var
      >
    Bytes16_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes16
  {
    typedef Bytes16_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes16Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes16;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes32;
  
  typedef
    TAO_Var_Var_T<
        Bytes32
      >
    Bytes32_var;
  
  typedef
    TAO_Out_T<
        Bytes32,
        Bytes32_var
      >
    Bytes32_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes32
  {
    typedef Bytes32_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes32Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes32;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes64;
  
  typedef
    TAO_Var_Var_T<
        Bytes64
      >
    Bytes64_var;
  
  typedef
    TAO_Out_T<
        Bytes64,
        Bytes64_var
      >
    Bytes64_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes64
  {
    typedef Bytes64_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes64Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes64;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes128;
  
  typedef
    TAO_Var_Var_T<
        Bytes128
      >
    Bytes128_var;
  
  typedef
    TAO_Out_T<
        Bytes128,
        Bytes128_var
      >
    Bytes128_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes128
  {
    typedef Bytes128_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes128Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes128;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes256;
  
  typedef
    TAO_Var_Var_T<
        Bytes256
      >
    Bytes256_var;
  
  typedef
    TAO_Out_T<
        Bytes256,
        Bytes256_var
      >
    Bytes256_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes256
  {
    typedef Bytes256_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes256Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes256;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes512;
  
  typedef
    TAO_Var_Var_T<
        Bytes512
      >
    Bytes512_var;
  
  typedef
    TAO_Out_T<
        Bytes512,
        Bytes512_var
      >
    Bytes512_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes512
  {
    typedef Bytes512_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes512Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes512;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes1024;
  
  typedef
    TAO_Var_Var_T<
        Bytes1024
      >
    Bytes1024_var;
  
  typedef
    TAO_Out_T<
        Bytes1024,
        Bytes1024_var
      >
    Bytes1024_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes1024
  {
    typedef Bytes1024_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes1024Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes1024;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes2048;
  
  typedef
    TAO_Var_Var_T<
        Bytes2048
      >
    Bytes2048_var;
  
  typedef
    TAO_Out_T<
        Bytes2048,
        Bytes2048_var
      >
    Bytes2048_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes2048
  {
    typedef Bytes2048_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes2048Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes2048;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes4096;
  
  typedef
    TAO_Var_Var_T<
        Bytes4096
      >
    Bytes4096_var;
  
  typedef
    TAO_Out_T<
        Bytes4096,
        Bytes4096_var
      >
    Bytes4096_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes4096
  {
    typedef Bytes4096_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes4096Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes4096;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes8192;
  
  typedef
    TAO_Var_Var_T<
        Bytes8192
      >
    Bytes8192_var;
  
  typedef
    TAO_Out_T<
        Bytes8192,
        Bytes8192_var
      >
    Bytes8192_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes8192
  {
    typedef Bytes8192_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes8192Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes8192;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Bytes16384;
  
  typedef
    TAO_Var_Var_T<
        Bytes16384
      >
    Bytes16384_var;
  
  typedef
    TAO_Out_T<
        Bytes16384,
        Bytes16384_var
      >
    Bytes16384_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Bytes16384
  {
    typedef Bytes16384_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::ULong timestamp;
    TP_Test::Bytes16384Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Bytes16384;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Nested;
  
  typedef
    TAO_Var_Var_T<
        Nested
      >
    Nested_var;
  
  typedef
    TAO_Out_T<
        Nested,
        Nested_var
      >
    Nested_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Nested
  {
    typedef Nested_var _var_type;
    
    static void _tao_any_destructor (void *);
    TAO_String_Manager info;
    CORBA::Long index;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Nested;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_NESTEDSEQUENCE_CH_)
#define _TP_TEST_NESTEDSEQUENCE_CH_
  
  class NestedSequence;
  
  typedef
    TAO_VarSeq_Var_T<
        NestedSequence,
        Nested
      >
    NestedSequence_var;
  
  typedef
    TAO_Seq_Out_T<
        NestedSequence,
        NestedSequence_var,
        Nested
      >
    NestedSequence_out;
  
  class  NestedSequence
    : public
        TAO_Unbounded_Sequence<
            Nested
          >
  {
  public:
    NestedSequence (void);
    NestedSequence (CORBA::ULong max);
    NestedSequence (
        CORBA::ULong max,
        CORBA::ULong length,
        Nested* buffer, 
        CORBA::Boolean release = 0
      );
    NestedSequence (const NestedSequence &);
    ~NestedSequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef NestedSequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_NestedSequence;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Outer;
  
  typedef
    TAO_Var_Var_T<
        Outer
      >
    Outer_var;
  
  typedef
    TAO_Out_T<
        Outer,
        Outer_var
      >
    Outer_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Outer
  {
    typedef Outer_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::Long length;
    TP_Test::NestedSequence nested_member;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Outer;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX4SEQUENCE_CH_)
#define _TP_TEST_COMPLEX4SEQUENCE_CH_
  
  class Complex4Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex4Sequence,
        Outer
      >
    Complex4Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex4Sequence,
        Complex4Sequence_var,
        Outer
      >
    Complex4Sequence_out;
  
  class  Complex4Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            4
          >
  {
  public:
    Complex4Sequence (void);
    Complex4Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex4Sequence (const Complex4Sequence &);
    ~Complex4Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex4Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex4Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX8SEQUENCE_CH_)
#define _TP_TEST_COMPLEX8SEQUENCE_CH_
  
  class Complex8Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex8Sequence,
        Outer
      >
    Complex8Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex8Sequence,
        Complex8Sequence_var,
        Outer
      >
    Complex8Sequence_out;
  
  class  Complex8Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            8
          >
  {
  public:
    Complex8Sequence (void);
    Complex8Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex8Sequence (const Complex8Sequence &);
    ~Complex8Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex8Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex8Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX16SEQUENCE_CH_)
#define _TP_TEST_COMPLEX16SEQUENCE_CH_
  
  class Complex16Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex16Sequence,
        Outer
      >
    Complex16Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex16Sequence,
        Complex16Sequence_var,
        Outer
      >
    Complex16Sequence_out;
  
  class  Complex16Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            16
          >
  {
  public:
    Complex16Sequence (void);
    Complex16Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex16Sequence (const Complex16Sequence &);
    ~Complex16Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex16Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex16Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX32SEQUENCE_CH_)
#define _TP_TEST_COMPLEX32SEQUENCE_CH_
  
  class Complex32Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex32Sequence,
        Outer
      >
    Complex32Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex32Sequence,
        Complex32Sequence_var,
        Outer
      >
    Complex32Sequence_out;
  
  class  Complex32Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            32
          >
  {
  public:
    Complex32Sequence (void);
    Complex32Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex32Sequence (const Complex32Sequence &);
    ~Complex32Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex32Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex32Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX64SEQUENCE_CH_)
#define _TP_TEST_COMPLEX64SEQUENCE_CH_
  
  class Complex64Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex64Sequence,
        Outer
      >
    Complex64Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex64Sequence,
        Complex64Sequence_var,
        Outer
      >
    Complex64Sequence_out;
  
  class  Complex64Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            64
          >
  {
  public:
    Complex64Sequence (void);
    Complex64Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex64Sequence (const Complex64Sequence &);
    ~Complex64Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex64Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex64Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX128SEQUENCE_CH_)
#define _TP_TEST_COMPLEX128SEQUENCE_CH_
  
  class Complex128Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex128Sequence,
        Outer
      >
    Complex128Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex128Sequence,
        Complex128Sequence_var,
        Outer
      >
    Complex128Sequence_out;
  
  class  Complex128Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            128
          >
  {
  public:
    Complex128Sequence (void);
    Complex128Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex128Sequence (const Complex128Sequence &);
    ~Complex128Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex128Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex128Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX256SEQUENCE_CH_)
#define _TP_TEST_COMPLEX256SEQUENCE_CH_
  
  class Complex256Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex256Sequence,
        Outer
      >
    Complex256Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex256Sequence,
        Complex256Sequence_var,
        Outer
      >
    Complex256Sequence_out;
  
  class  Complex256Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            256
          >
  {
  public:
    Complex256Sequence (void);
    Complex256Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex256Sequence (const Complex256Sequence &);
    ~Complex256Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex256Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex256Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX512SEQUENCE_CH_)
#define _TP_TEST_COMPLEX512SEQUENCE_CH_
  
  class Complex512Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex512Sequence,
        Outer
      >
    Complex512Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex512Sequence,
        Complex512Sequence_var,
        Outer
      >
    Complex512Sequence_out;
  
  class  Complex512Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            512
          >
  {
  public:
    Complex512Sequence (void);
    Complex512Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex512Sequence (const Complex512Sequence &);
    ~Complex512Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex512Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex512Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX1024SEQUENCE_CH_)
#define _TP_TEST_COMPLEX1024SEQUENCE_CH_
  
  class Complex1024Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex1024Sequence,
        Outer
      >
    Complex1024Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex1024Sequence,
        Complex1024Sequence_var,
        Outer
      >
    Complex1024Sequence_out;
  
  class  Complex1024Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            1024
          >
  {
  public:
    Complex1024Sequence (void);
    Complex1024Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex1024Sequence (const Complex1024Sequence &);
    ~Complex1024Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex1024Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex1024Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX2048SEQUENCE_CH_)
#define _TP_TEST_COMPLEX2048SEQUENCE_CH_
  
  class Complex2048Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex2048Sequence,
        Outer
      >
    Complex2048Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex2048Sequence,
        Complex2048Sequence_var,
        Outer
      >
    Complex2048Sequence_out;
  
  class  Complex2048Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            2048
          >
  {
  public:
    Complex2048Sequence (void);
    Complex2048Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex2048Sequence (const Complex2048Sequence &);
    ~Complex2048Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex2048Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex2048Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX4096SEQUENCE_CH_)
#define _TP_TEST_COMPLEX4096SEQUENCE_CH_
  
  class Complex4096Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex4096Sequence,
        Outer
      >
    Complex4096Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex4096Sequence,
        Complex4096Sequence_var,
        Outer
      >
    Complex4096Sequence_out;
  
  class  Complex4096Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            4096
          >
  {
  public:
    Complex4096Sequence (void);
    Complex4096Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex4096Sequence (const Complex4096Sequence &);
    ~Complex4096Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex4096Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex4096Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX8192SEQUENCE_CH_)
#define _TP_TEST_COMPLEX8192SEQUENCE_CH_
  
  class Complex8192Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex8192Sequence,
        Outer
      >
    Complex8192Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex8192Sequence,
        Complex8192Sequence_var,
        Outer
      >
    Complex8192Sequence_out;
  
  class  Complex8192Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            8192
          >
  {
  public:
    Complex8192Sequence (void);
    Complex8192Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex8192Sequence (const Complex8192Sequence &);
    ~Complex8192Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex8192Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex8192Sequence;
  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TP_TEST_COMPLEX16384SEQUENCE_CH_)
#define _TP_TEST_COMPLEX16384SEQUENCE_CH_
  
  class Complex16384Sequence;
  
  typedef
    TAO_VarSeq_Var_T<
        Complex16384Sequence,
        Outer
      >
    Complex16384Sequence_var;
  
  typedef
    TAO_Seq_Out_T<
        Complex16384Sequence,
        Complex16384Sequence_var,
        Outer
      >
    Complex16384Sequence_out;
  
  class  Complex16384Sequence
    : public
        TAO_Bounded_Sequence<
            Outer,
            16384
          >
  {
  public:
    Complex16384Sequence (void);
    Complex16384Sequence (
        CORBA::ULong length,
        Outer* buffer, 
        CORBA::Boolean release = 0
      );
    Complex16384Sequence (const Complex16384Sequence &);
    ~Complex16384Sequence (void);
    
    static void _tao_any_destructor (void *);
    
    typedef Complex16384Sequence_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex16384Sequence;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex4;
  
  typedef
    TAO_Var_Var_T<
        Complex4
      >
    Complex4_var;
  
  typedef
    TAO_Out_T<
        Complex4,
        Complex4_var
      >
    Complex4_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex4
  {
    typedef Complex4_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex4Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex4;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex8;
  
  typedef
    TAO_Var_Var_T<
        Complex8
      >
    Complex8_var;
  
  typedef
    TAO_Out_T<
        Complex8,
        Complex8_var
      >
    Complex8_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex8
  {
    typedef Complex8_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex8Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex8;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex16;
  
  typedef
    TAO_Var_Var_T<
        Complex16
      >
    Complex16_var;
  
  typedef
    TAO_Out_T<
        Complex16,
        Complex16_var
      >
    Complex16_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex16
  {
    typedef Complex16_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex16Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex16;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex32;
  
  typedef
    TAO_Var_Var_T<
        Complex32
      >
    Complex32_var;
  
  typedef
    TAO_Out_T<
        Complex32,
        Complex32_var
      >
    Complex32_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex32
  {
    typedef Complex32_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex32Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex32;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex64;
  
  typedef
    TAO_Var_Var_T<
        Complex64
      >
    Complex64_var;
  
  typedef
    TAO_Out_T<
        Complex64,
        Complex64_var
      >
    Complex64_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex64
  {
    typedef Complex64_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex64Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex64;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex128;
  
  typedef
    TAO_Var_Var_T<
        Complex128
      >
    Complex128_var;
  
  typedef
    TAO_Out_T<
        Complex128,
        Complex128_var
      >
    Complex128_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex128
  {
    typedef Complex128_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex128Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex128;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex256;
  
  typedef
    TAO_Var_Var_T<
        Complex256
      >
    Complex256_var;
  
  typedef
    TAO_Out_T<
        Complex256,
        Complex256_var
      >
    Complex256_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex256
  {
    typedef Complex256_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex256Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex256;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex512;
  
  typedef
    TAO_Var_Var_T<
        Complex512
      >
    Complex512_var;
  
  typedef
    TAO_Out_T<
        Complex512,
        Complex512_var
      >
    Complex512_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex512
  {
    typedef Complex512_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex512Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex512;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex1024;
  
  typedef
    TAO_Var_Var_T<
        Complex1024
      >
    Complex1024_var;
  
  typedef
    TAO_Out_T<
        Complex1024,
        Complex1024_var
      >
    Complex1024_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex1024
  {
    typedef Complex1024_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex1024Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex1024;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex2048;
  
  typedef
    TAO_Var_Var_T<
        Complex2048
      >
    Complex2048_var;
  
  typedef
    TAO_Out_T<
        Complex2048,
        Complex2048_var
      >
    Complex2048_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex2048
  {
    typedef Complex2048_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex2048Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex2048;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex4096;
  
  typedef
    TAO_Var_Var_T<
        Complex4096
      >
    Complex4096_var;
  
  typedef
    TAO_Out_T<
        Complex4096,
        Complex4096_var
      >
    Complex4096_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex4096
  {
    typedef Complex4096_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex4096Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex4096;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex8192;
  
  typedef
    TAO_Var_Var_T<
        Complex8192
      >
    Complex8192_var;
  
  typedef
    TAO_Out_T<
        Complex8192,
        Complex8192_var
      >
    Complex8192_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex8192
  {
    typedef Complex8192_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex8192Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex8192;
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:258
  
  struct Complex16384;
  
  typedef
    TAO_Var_Var_T<
        Complex16384
      >
    Complex16384_var;
  
  typedef
    TAO_Out_T<
        Complex16384,
        Complex16384_var
      >
    Complex16384_out;
  
  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:52
  
  struct  Complex16384
  {
    typedef Complex16384_var _var_type;
    
    static void _tao_any_destructor (void *);
    TP_Test::Complex16384Sequence data;
  };
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Complex16384;

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:66

} // module TP_Test

// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:59

// Traits specializations.
namespace TAO
{
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::QuitMsg &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::QuitMsg*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::QuitMsg *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::QuitMsg *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes4Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes4Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes4Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes4Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes8Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes8Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes8Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes8Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes16Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes16Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes16Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes16Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes32Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes32Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes32Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes32Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes64Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes64Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes64Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes64Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes128Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes128Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes128Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes128Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes256Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes256Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes256Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes256Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes512Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes512Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes512Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes512Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes1024Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes1024Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes1024Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes1024Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes2048Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes2048Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes2048Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes2048Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes4096Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes4096Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes4096Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes4096Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes8192Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes8192Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes8192Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes8192Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes16384Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes16384Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes16384Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes16384Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes4 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes4*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes4 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes4 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes8 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes8*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes8 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes8 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes16 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes16*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes16 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes16 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes32 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes32*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes32 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes32 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes64 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes64*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes64 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes64 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes128 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes128*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes128 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes128 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes256 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes256*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes256 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes256 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes512 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes512*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes512 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes512 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes1024 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes1024*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes1024 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes1024 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes2048 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes2048*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes2048 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes2048 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes4096 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes4096*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes4096 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes4096 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes8192 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes8192*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes8192 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes8192 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Bytes16384 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Bytes16384*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Bytes16384 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Bytes16384 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Nested &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Nested*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Nested *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Nested *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::NestedSequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::NestedSequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::NestedSequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::NestedSequence *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Outer &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Outer*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Outer *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Outer *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex4Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex4Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex4Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex4Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex8Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex8Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex8Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex8Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex16Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex16Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex16Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex16Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex32Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex32Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex32Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex32Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex64Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex64Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex64Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex64Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex128Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex128Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex128Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex128Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex256Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex256Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex256Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex256Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex512Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex512Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex512Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex512Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex1024Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex1024Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex1024Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex1024Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex2048Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex2048Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex2048Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex2048Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex4096Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex4096Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex4096Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex4096Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex8192Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex8192Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex8192Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex8192Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex16384Sequence &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex16384Sequence*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex16384Sequence *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex16384Sequence *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex4 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex4*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex4 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex4 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex8 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex8*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex8 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex8 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex16 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex16*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex16 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex16 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex32 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex32*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex32 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex32 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex64 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex64*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex64 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex64 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex128 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex128*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex128 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex128 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex256 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex256*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex256 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex256 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex512 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex512*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex512 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex512 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex1024 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex1024*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex1024 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex1024 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex2048 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex2048*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex2048 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex2048 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex4096 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex4096*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex4096 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex4096 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex8192 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex8192*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex8192 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex8192 *&);

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const TP_Test::Complex16384 &); // copying version
 void operator<<= (CORBA::Any &, TP_Test::Complex16384*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, TP_Test::Complex16384 *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const TP_Test::Complex16384 *&);

// TAO_IDL - Generated from
// be/be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::QuitMsg &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::QuitMsg &);

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes4Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes4Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes4Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes4Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes4Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes8Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes8Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes8Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes8Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes8Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes16Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes16Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes16Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes16Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes16Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes32Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes32Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes32Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes32Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes32Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes64Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes64Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes64Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes64Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes64Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes128Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes128Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes128Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes128Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes128Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes256Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes256Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes256Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes256Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes256Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes512Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes512Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes512Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes512Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes512Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes1024Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes1024Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes1024Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes1024Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes1024Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes2048Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes2048Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes2048Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes2048Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes2048Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes4096Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes4096Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes4096Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes4096Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes4096Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes8192Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes8192Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes8192Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes8192Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes8192Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Bytes16384Sequence_H_
#define _TAO_CDR_OP_TP_Test_Bytes16384Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Bytes16384Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Bytes16384Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Bytes16384Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes4 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes4 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes8 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes8 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes16 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes16 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes32 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes32 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes64 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes64 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes128 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes128 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes256 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes256 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes512 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes512 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes1024 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes1024 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes2048 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes2048 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes4096 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes4096 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes8192 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes8192 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Bytes16384 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Bytes16384 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Nested &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Nested &);

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_NestedSequence_H_
#define _TAO_CDR_OP_TP_Test_NestedSequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::NestedSequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::NestedSequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_NestedSequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Outer &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Outer &);

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex4Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex4Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex4Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex4Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex4Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex8Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex8Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex8Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex8Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex8Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex16Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex16Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex16Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex16Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex16Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex32Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex32Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex32Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex32Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex32Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex64Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex64Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex64Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex64Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex64Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex128Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex128Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex128Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex128Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex128Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex256Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex256Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex256Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex256Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex256Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex512Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex512Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex512Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex512Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex512Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex1024Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex1024Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex1024Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex1024Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex1024Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex2048Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex2048Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex2048Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex2048Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex2048Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex4096Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex4096Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex4096Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex4096Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex4096Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex8192Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex8192Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex8192Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex8192Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex8192Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_TP_Test_Complex16384Sequence_H_
#define _TAO_CDR_OP_TP_Test_Complex16384Sequence_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const TP_Test::Complex16384Sequence &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    TP_Test::Complex16384Sequence &
  );

#endif /* _TAO_CDR_OP_TP_Test_Complex16384Sequence_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex4 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex4 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex8 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex8 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex16 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex16 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex32 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex32 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex64 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex64 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex128 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex128 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex256 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex256 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex512 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex512 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex1024 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex1024 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex2048 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex2048 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex4096 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex4096 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex8192 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex8192 &);

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:53

 CORBA::Boolean operator<< (TAO_OutputCDR &, const TP_Test::Complex16384 &);
 CORBA::Boolean operator>> (TAO_InputCDR &, TP_Test::Complex16384 &);

// TAO_IDL - Generated from
// be/be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// be/be_codegen.cpp:978

#if defined (__ACE_INLINE__)
#include "TPTDefC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#endif /* ifndef */


