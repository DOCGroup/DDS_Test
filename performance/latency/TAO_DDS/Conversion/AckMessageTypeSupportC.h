// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:164

#ifndef _TAO_IDL_ACKMESSAGETYPESUPPORTC_H_
#define _TAO_IDL_ACKMESSAGETYPESUPPORTC_H_

#include /**/ "ace/pre.h"


#include "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Environment.h"
#include "dds/DCPS/Serializer.h"
#include "tao/Object.h"
#include "tao/Managed_Types.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Versioned_Namespace.h"

#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsDataWriterRemoteC.h"
#include "dds/DdsDcpsDataReaderRemoteC.h"
#include "dds/DdsDcpsTypeSupportTaoC.h"
#include "DDSPerfTestC.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// w:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:62

namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}

// TAO_IDL - Generated from
// w:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_ACKMESSAGESEQ_CH_)
#define _ACKMESSAGESEQ_CH_

class AckMessageSeq;

typedef
  TAO_FixedSeq_Var_T<
      AckMessageSeq,
      DDSPerfTest::AckMessage
    >
  AckMessageSeq_var;

typedef
  TAO_Seq_Out_T<
      AckMessageSeq,
      AckMessageSeq_var,
      DDSPerfTest::AckMessage
    >
  AckMessageSeq_out;

class  AckMessageSeq
  : public
      TAO_Unbounded_Sequence<
          DDSPerfTest::AckMessage
        >
{
public:
  AckMessageSeq (void);
  AckMessageSeq ( ::CORBA::ULong max);
  AckMessageSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      DDSPerfTest::AckMessage* buffer, 
      ::CORBA::Boolean release = 0
    );
  AckMessageSeq (const AckMessageSeq &);
  ~AckMessageSeq (void);
  
  typedef AckMessageSeq_var _var_type;
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// .\be\be_interface.cpp:646

#if !defined (_ACKMESSAGETYPESUPPORT__VAR_OUT_CH_)
#define _ACKMESSAGETYPESUPPORT__VAR_OUT_CH_

class AckMessageTypeSupport;
typedef AckMessageTypeSupport *AckMessageTypeSupport_ptr;

typedef
  TAO_Objref_Var_T<
      AckMessageTypeSupport
    >
  AckMessageTypeSupport_var;

typedef
  TAO_Objref_Out_T<
      AckMessageTypeSupport
    >
  AckMessageTypeSupport_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// w:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_ACKMESSAGETYPESUPPORT_CH_)
#define _ACKMESSAGETYPESUPPORT_CH_

class  AckMessageTypeSupport
  : public virtual ::TAO::DCPS::TypeSupport
{
public:
  friend class TAO::Narrow_Utils<AckMessageTypeSupport>;
  typedef AckMessageTypeSupport_ptr _ptr_type;
  typedef AckMessageTypeSupport_var _var_type;
  
  // The static operations.
  static AckMessageTypeSupport_ptr _duplicate (AckMessageTypeSupport_ptr obj);
  
  static void _tao_release (AckMessageTypeSupport_ptr obj);
  
  static AckMessageTypeSupport_ptr _narrow (
      ::CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static AckMessageTypeSupport_ptr _unchecked_narrow (
      ::CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static AckMessageTypeSupport_ptr _nil (void)
  {
    return static_cast<AckMessageTypeSupport_ptr> (0);
  }
  
  
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t register_type (
      ::DDS::DomainParticipant_ptr participant,
      const char * type_name
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:210
  
  virtual ::CORBA::Boolean _is_a (
      const char *type_id
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
private:
  TAO::Collocation_Proxy_Broker *the_TAO_AckMessageTypeSupport_Proxy_Broker_;

protected:
  // Concrete interface only.
  AckMessageTypeSupport (void);
  
  // These methods travese the inheritance tree and set the
  // parents piece of the given class in the right mode.
  virtual void AckMessageTypeSupport_setup_collocation (void);
  
  // Concrete non-local interface only.
  AckMessageTypeSupport (
      IOP::IOR *ior,
      TAO_ORB_Core *orb_core = 0
    );
  
  // Non-local interface only.
  AckMessageTypeSupport (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = 0,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0
    );
  
  virtual ~AckMessageTypeSupport (void);

private:
  // Private and unimplemented for concrete interfaces.
  AckMessageTypeSupport (const AckMessageTypeSupport &);
  
  void operator= (const AckMessageTypeSupport &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// .\be\be_interface.cpp:646

#if !defined (_ACKMESSAGEDATAWRITER__VAR_OUT_CH_)
#define _ACKMESSAGEDATAWRITER__VAR_OUT_CH_

class AckMessageDataWriter;
typedef AckMessageDataWriter *AckMessageDataWriter_ptr;

typedef
  TAO_Objref_Var_T<
      AckMessageDataWriter
    >
  AckMessageDataWriter_var;

typedef
  TAO_Objref_Out_T<
      AckMessageDataWriter
    >
  AckMessageDataWriter_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// w:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_ACKMESSAGEDATAWRITER_CH_)
#define _ACKMESSAGEDATAWRITER_CH_

class  AckMessageDataWriter
  : public virtual ::TAO::DCPS::DataWriterRemote
{
public:
  friend class TAO::Narrow_Utils<AckMessageDataWriter>;
  typedef AckMessageDataWriter_ptr _ptr_type;
  typedef AckMessageDataWriter_var _var_type;
  
  // The static operations.
  static AckMessageDataWriter_ptr _duplicate (AckMessageDataWriter_ptr obj);
  
  static void _tao_release (AckMessageDataWriter_ptr obj);
  
  static AckMessageDataWriter_ptr _narrow (
      ::CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static AckMessageDataWriter_ptr _unchecked_narrow (
      ::CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static AckMessageDataWriter_ptr _nil (void)
  {
    return static_cast<AckMessageDataWriter_ptr> (0);
  }
  
  
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::InstanceHandle_t _cxx_register (
      const ::DDSPerfTest::AckMessage & instance_data
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::InstanceHandle_t register_w_timestamp (
      const ::DDSPerfTest::AckMessage & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t unregister (
      const ::DDSPerfTest::AckMessage & instance_data,
      ::DDS::InstanceHandle_t handle
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t unregister_w_timestamp (
      const ::DDSPerfTest::AckMessage & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t write (
      const ::DDSPerfTest::AckMessage & instance_data,
      ::DDS::InstanceHandle_t handle
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::DDSPerfTest::AckMessage & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t dispose (
      const ::DDSPerfTest::AckMessage & instance_data,
      ::DDS::InstanceHandle_t instance_handle
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::DDSPerfTest::AckMessage & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t get_key_value (
      ::DDSPerfTest::AckMessage & key_holder,
      ::DDS::InstanceHandle_t handle
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:210
  
  virtual ::CORBA::Boolean _is_a (
      const char *type_id
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
private:
  TAO::Collocation_Proxy_Broker *the_TAO_AckMessageDataWriter_Proxy_Broker_;

protected:
  // Concrete interface only.
  AckMessageDataWriter (void);
  
  // These methods travese the inheritance tree and set the
  // parents piece of the given class in the right mode.
  virtual void AckMessageDataWriter_setup_collocation (void);
  
  // Concrete non-local interface only.
  AckMessageDataWriter (
      IOP::IOR *ior,
      TAO_ORB_Core *orb_core = 0
    );
  
  // Non-local interface only.
  AckMessageDataWriter (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = 0,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0
    );
  
  virtual ~AckMessageDataWriter (void);

private:
  // Private and unimplemented for concrete interfaces.
  AckMessageDataWriter (const AckMessageDataWriter &);
  
  void operator= (const AckMessageDataWriter &);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// .\be\be_interface.cpp:646

#if !defined (_ACKMESSAGEDATAREADER__VAR_OUT_CH_)
#define _ACKMESSAGEDATAREADER__VAR_OUT_CH_

class AckMessageDataReader;
typedef AckMessageDataReader *AckMessageDataReader_ptr;

typedef
  TAO_Objref_Var_T<
      AckMessageDataReader
    >
  AckMessageDataReader_var;

typedef
  TAO_Objref_Out_T<
      AckMessageDataReader
    >
  AckMessageDataReader_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// w:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_ACKMESSAGEDATAREADER_CH_)
#define _ACKMESSAGEDATAREADER_CH_

class  AckMessageDataReader
  : public virtual ::TAO::DCPS::DataReaderRemote
{
public:
  friend class TAO::Narrow_Utils<AckMessageDataReader>;
  typedef AckMessageDataReader_ptr _ptr_type;
  typedef AckMessageDataReader_var _var_type;
  
  // The static operations.
  static AckMessageDataReader_ptr _duplicate (AckMessageDataReader_ptr obj);
  
  static void _tao_release (AckMessageDataReader_ptr obj);
  
  static AckMessageDataReader_ptr _narrow (
      ::CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static AckMessageDataReader_ptr _unchecked_narrow (
      ::CORBA::Object_ptr obj
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  static AckMessageDataReader_ptr _nil (void)
  {
    return static_cast<AckMessageDataReader_ptr> (0);
  }
  
  
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t read (
      ::AckMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t take (
      ::AckMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t read_next_sample (
      ::DDSPerfTest::AckMessage & received_data,
      ::DDS::SampleInfo & sample_info
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t take_next_sample (
      ::DDSPerfTest::AckMessage & received_data,
      ::DDS::SampleInfo & sample_info
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t read_instance (
      ::AckMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t take_instance (
      ::AckMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t read_next_instance (
      ::AckMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t take_next_instance (
      ::AckMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t return_loan (
      ::AckMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::DDS::ReturnCode_t get_key_value (
      ::DDSPerfTest::AckMessage & key_holder,
      ::DDS::InstanceHandle_t handle
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    )
    ACE_THROW_SPEC ((
      ::CORBA::SystemException
    ));
  
  // TAO_IDL - Generated from
  // w:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:210
  
  virtual ::CORBA::Boolean _is_a (
      const char *type_id
      ACE_ENV_ARG_DECL_WITH_DEFAULTS
    );
  
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
private:
  TAO::Collocation_Proxy_Broker *the_TAO_AckMessageDataReader_Proxy_Broker_;

protected:
  // Concrete interface only.
  AckMessageDataReader (void);
  
  // These methods travese the inheritance tree and set the
  // parents piece of the given class in the right mode.
  virtual void AckMessageDataReader_setup_collocation (void);
  
  // Concrete non-local interface only.
  AckMessageDataReader (
      IOP::IOR *ior,
      TAO_ORB_Core *orb_core = 0
    );
  
  // Non-local interface only.
  AckMessageDataReader (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = 0,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0
    );
  
  virtual ~AckMessageDataReader (void);

private:
  // Private and unimplemented for concrete interfaces.
  AckMessageDataReader (const AckMessageDataReader &);
  
  void operator= (const AckMessageDataReader &);
};

#endif /* end #if !defined */

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// w:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root.cpp:139

extern 
TAO::Collocation_Proxy_Broker *
(*_TAO_AckMessageTypeSupport_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

extern 
TAO::Collocation_Proxy_Broker *
(*_TAO_AckMessageDataWriter_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

extern 
TAO::Collocation_Proxy_Broker *
(*_TAO_AckMessageDataReader_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:62

// Traits specializations.
namespace TAO
{

#if !defined (_ACKMESSAGETYPESUPPORT__TRAITS_)
#define _ACKMESSAGETYPESUPPORT__TRAITS_
  
  template<>
  struct  Objref_Traits< ::AckMessageTypeSupport>
  {
    static ::AckMessageTypeSupport_ptr duplicate (
        ::AckMessageTypeSupport_ptr
      );
    static void release (
        ::AckMessageTypeSupport_ptr
      );
    static ::AckMessageTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::AckMessageTypeSupport_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_ACKMESSAGEDATAWRITER__TRAITS_)
#define _ACKMESSAGEDATAWRITER__TRAITS_
  
  template<>
  struct  Objref_Traits< ::AckMessageDataWriter>
  {
    static ::AckMessageDataWriter_ptr duplicate (
        ::AckMessageDataWriter_ptr
      );
    static void release (
        ::AckMessageDataWriter_ptr
      );
    static ::AckMessageDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::AckMessageDataWriter_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_ACKMESSAGEDATAREADER__TRAITS_)
#define _ACKMESSAGEDATAREADER__TRAITS_
  
  template<>
  struct  Objref_Traits< ::AckMessageDataReader>
  {
    static ::AckMessageDataReader_ptr duplicate (
        ::AckMessageDataReader_ptr
      );
    static void release (
        ::AckMessageDataReader_ptr
      );
    static ::AckMessageDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::AckMessageDataReader_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}

// TAO_IDL - Generated from
// w:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_AckMessageSeq_H_
#define _TAO_CDR_OP_AckMessageSeq_H_

 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const AckMessageSeq &
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &,
    AckMessageSeq &
  );

#endif /* _TAO_CDR_OP_AckMessageSeq_H_ */

// TAO_IDL - Generated from
// w:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const AckMessageTypeSupport_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, AckMessageTypeSupport_ptr &);

// TAO_IDL - Generated from
// w:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const AckMessageDataWriter_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, AckMessageDataWriter_ptr &);

// TAO_IDL - Generated from
// w:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const AckMessageDataReader_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, AckMessageDataReader_ptr &);

// TAO_IDL - Generated from
// w:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/serializer_op_ch.cpp:71

#if !defined _TAO_SERIALIZER_OP_AckMessageSeq_H_
#define _TAO_SERIALIZER_OP_AckMessageSeq_H_

 ::CORBA::Boolean _tao_is_bounded_size (
    const AckMessageSeq &
  );
 size_t _dcps_max_marshaled_size (
    const AckMessageSeq &
  );
 size_t _dcps_find_size (
    const AckMessageSeq &
  );


 ::CORBA::Boolean operator<< (
    TAO::DCPS::Serializer &,
    const AckMessageSeq &
  );
 ::CORBA::Boolean operator>> (
    TAO::DCPS::Serializer &,
    AckMessageSeq &
  );

#endif /* _TAO_SERIALIZER_OP_AckMessageSeq_H_ */

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1101

TAO_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "AckMessageTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */


