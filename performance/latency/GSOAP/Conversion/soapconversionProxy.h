/* soapconversionProxy.h
   Generated by gSOAP 2.7.6c from Test.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapconversion_H
#define soapconversion_H
#include "soapH.h"
class conversion
{   public:
	struct soap *soap;
	const char *endpoint;
	conversion()
	{ soap = soap_new(); endpoint = "http://localhost:8080"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns", "urn:conversion", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	virtual ~conversion() { if (soap) { soap_destroy(soap); soap_end(soap); soap_done(soap); free((void*)soap); } };
	virtual int ns__conversionByteArray(struct gSOAP_byte_array in, unsigned long &seq_num) { return soap ? soap_call_ns__conversionByteArray(soap, endpoint, NULL, in, seq_num) : SOAP_EOM; };
	virtual int ns__conversionNestedArray(struct gSOAP_outer_array in, unsigned long &seq_num) { return soap ? soap_call_ns__conversionNestedArray(soap, endpoint, NULL, in, seq_num) : SOAP_EOM; };
};
#endif
